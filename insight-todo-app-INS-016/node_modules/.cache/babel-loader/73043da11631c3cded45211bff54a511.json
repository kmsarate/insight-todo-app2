{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\Insight-todo-app2\\\\insight-todo-app2\\\\insight-todo-app-ins-016\\\\src\\\\pages\\\\Profile.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as md5 from \"md5\"; // Components\n\nimport ConfirmationModal from \"../components/ConfirmationModal\";\nimport Input from \"../components/input\";\nimport Button from \"../components/button\";\nimport Menu from \"../components/Menu\";\nimport Navbar from \"../components/navbar\";\nimport { FiEdit3, FiCamera } from \"react-icons/fi\";\nimport CoverNone from \"../def/cover.svg\";\nimport UserNone from \"../def/User.svg\"; // db\n\nimport db from \"../utils/db\"; // Style\n\nimport \"../styles/Home.css\";\nimport \"../styles/profile.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [cover, setCover] = useState(\"\");\n  const user = useLiveQuery(() => db.users.where(\"userid\").equals(props.sessionId).toArray());\n  const usersList = useLiveQuery(() => db.users.toArray());\n\n  const getFile = (e, set) => {\n    let reader = new FileReader();\n    reader.readAsDataURL(e[0]);\n\n    reader.onload = e => {\n      set(reader.result);\n    };\n  };\n\n  const updateProfile = e => {\n    e.preventDefault();\n    const _val = [];\n    usersList.map(item => {\n      _val.push(item.username.toLowerCase());\n    });\n\n    if (_val.includes(username.toLowerCase())) {\n      if (username === currentUser) {\n        db.users.update(user[0].userid, {\n          cover: cover,\n          img: image,\n          name: name,\n          username: username\n        });\n        props.notify(\"Changes saved\", \"success\");\n      } else {\n        props.notify(\"Username already taken\", \"error\");\n      }\n    } else {\n      db.users.update(user[0].userid, {\n        cover: cover,\n        img: image,\n        name: name,\n        username: username\n      });\n      props.notify(\"Changes saved\", \"success\");\n    }\n  };\n\n  const [pModal, setpModal] = useState(false);\n\n  const PasswordModal = () => {\n    _s();\n\n    const [currentPassword, setCurrentPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const signout = () => {\n      props.isLoggedInHandler();\n      props.setSessionId(\"\");\n      navigate(\"/\");\n    };\n\n    const updateNewPassword = e => {\n      e.preventDefault();\n\n      if (currentPassword !== \"\" && newPassword !== \"\" && confirmPassword !== \"\") {\n        console.log(\"hello\");\n\n        if (user[0].password === md5(currentPassword)) {\n          db.users.update(user[0].userid, {\n            password: md5(newPassword)\n          });\n          props.notify(\"Save new password\", \"success\");\n          signout();\n        } else {\n          props.notify(\"Incorrect current password\", \"error\");\n        }\n      } else {\n        props.notify(\"empty fields\", \"error\");\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"password-container\",\n          onSubmit: updateNewPassword,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Change Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            label: \"Current Password\",\n            placeholder: \"enter current password\",\n            errorMessage: \"Password should be 12-20 characters and include at least 1 lowercase letter, 1 uppercase letter, 1 number and 1 special character\",\n            handleChange: setCurrentPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            label: \"New Password\",\n            placeholder: \"enter new password\",\n            errorMessage: \"Password should be 12-20 characters and include at least 1 lowercase letter, 1 uppercase letter, 1 number and 1 special character\",\n            handleChange: setNewPassword,\n            pattern: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{12,20}$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            label: \"Confirm New Password\",\n            placeholder: \"confirm password\",\n            errorMessage: \"Password doesnt match\",\n            handleChange: setConfirmPassword,\n            pattern: newPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-r\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              label: \"cancel\",\n              className: \"cancel-btn\",\n              handleClick: () => setpModal(!pModal)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              label: \"Save Password\",\n              className: \"confirm-btn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  _s(PasswordModal, \"7khm3XB1wCZXTzYkXQCsvcm/L4A=\");\n\n  const [modalState, setModalState] = useState(false);\n\n  const deleteAccount = _id => {\n    db.users.delete(_id);\n    props.isLoggedInHandler();\n    props.setSessionId(\"\");\n    props.notify(\"Account deleted\", \"success\");\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    if (props.isLoggedIn === false && props.sessionId === \"\") {\n      navigate(\"/\");\n      props.setLoad(false);\n    } else {\n      props.setLoad(true);\n    }\n\n    if (user) {\n      setCover(user[0].cover);\n      setImage(user[0].img);\n      setName(user[0].name);\n      setUsername(user[0].username);\n      setCurrentUser(user[0].username);\n      setPassword(md5(user[0].password));\n    }\n  }, [user, navigate, props.isLoggedIn, props.sessionId]);\n  return props.load ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      sessionId: props.sessionId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      modalHandler: () => navigate(`/${props.sessionId}`),\n      isLoggedInHandler: props.isLoggedInHandler,\n      setSessionId: props.setSessionId,\n      sessionId: props.sessionId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cover-photo\",\n          style: cover === \"none\" ? {\n            backgroundImage: `url(${CoverNone})`\n          } : {\n            backgroundImage: \"url(\" + cover + \")\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-icon\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(FiEdit3, {\n                className: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: e => getFile(e.target.files, setCover)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"img-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-img\",\n                style: image === \"none\" ? {\n                  backgroundImage: `url(${UserNone})`\n                } : {\n                  backgroundImage: \"url(\" + image + \")\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"upload-icon\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(FiCamera, {\n                      className: \"icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 23\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    onChange: e => getFile(e.target.files, setImage)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\" \", name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: updateProfile,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              label: \"Name\",\n              placeholder: \"Enter Name\",\n              errorMessage: \"Name should have a minimum of 5 characters\",\n              handleChange: setName,\n              value: name,\n              pattern: \"^[a-zA-Z\\\\s]{5,150}$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              label: \"Username\",\n              placeholder: \"Enter username\",\n              errorMessage: \"Username should be 6-32 characters and shouldn't include any special character!\",\n              handleChange: setUsername,\n              value: username,\n              pattern: \"^[A-Za-z0-9]{6,32}$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" Password \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                label: \"Change password\",\n                className: \"button\",\n                handleClick: () => setpModal(!pModal)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              label: \"Save Changes\",\n              className: \"button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              label: \"Delete Account\",\n              className: \"delete-btn button\",\n              handleClick: () => setModalState(!modalState)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), pModal ? /*#__PURE__*/_jsxDEV(PasswordModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 23\n          }, this) : null, /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n            header: \"Delete Account\",\n            body: \"Are you sure you want to delete this account?\",\n            onConfirm: () => deleteAccount(user[0].userid),\n            onHide: () => setModalState(!modalState),\n            isVisible: modalState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : null;\n};\n\n_s2(Profile, \"cF8nElUn8uT//GxJI0vgwXJYaKU=\", false, function () {\n  return [useNavigate, useLiveQuery, useLiveQuery];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/Insight-todo-app2/insight-todo-app2/insight-todo-app-ins-016/src/pages/Profile.js"],"names":["React","useState","useEffect","useLiveQuery","useNavigate","md5","ConfirmationModal","Input","Button","Menu","Navbar","FiEdit3","FiCamera","CoverNone","UserNone","db","Profile","props","navigate","name","setName","username","setUsername","currentUser","setCurrentUser","password","setPassword","image","setImage","cover","setCover","user","users","where","equals","sessionId","toArray","usersList","getFile","e","set","reader","FileReader","readAsDataURL","onload","result","updateProfile","preventDefault","_val","map","item","push","toLowerCase","includes","update","userid","img","notify","pModal","setpModal","PasswordModal","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","signout","isLoggedInHandler","setSessionId","updateNewPassword","console","log","modalState","setModalState","deleteAccount","_id","delete","isLoggedIn","setLoad","load","backgroundImage","target","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLiveQuery } from \"dexie-react-hooks\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as md5 from \"md5\";\r\n\r\n// Components\r\nimport ConfirmationModal from \"../components/ConfirmationModal\";\r\nimport Input from \"../components/input\";\r\nimport Button from \"../components/button\";\r\nimport Menu from \"../components/Menu\";\r\nimport Navbar from \"../components/navbar\";\r\nimport { FiEdit3, FiCamera } from \"react-icons/fi\";\r\nimport CoverNone from \"../def/cover.svg\";\r\nimport UserNone from \"../def/User.svg\";\r\n\r\n// db\r\nimport db from \"../utils/db\";\r\n\r\n// Style\r\nimport \"../styles/Home.css\";\r\nimport \"../styles/profile.css\";\r\n\r\nconst Profile = (props) => {\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [currentUser, setCurrentUser] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [cover, setCover] = useState(\"\");\r\n\r\n  const user = useLiveQuery(() =>\r\n    db.users.where(\"userid\").equals(props.sessionId).toArray()\r\n  );\r\n  const usersList = useLiveQuery(() => db.users.toArray());\r\n\r\n  const getFile = (e, set) => {\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(e[0]);\r\n    reader.onload = (e) => {\r\n      set(reader.result);\r\n    };\r\n  };\r\n\r\n  const updateProfile = (e) => {\r\n    e.preventDefault();\r\n    const _val = [];\r\n    usersList.map((item) => {\r\n      _val.push(item.username.toLowerCase());\r\n    });\r\n\r\n    if (_val.includes(username.toLowerCase())) {\r\n      if (username === currentUser) {\r\n        db.users.update(user[0].userid, {\r\n          cover: cover,\r\n          img: image,\r\n          name: name,\r\n          username: username,\r\n        });\r\n        props.notify(\"Changes saved\", \"success\");\r\n      } else {\r\n        props.notify(\"Username already taken\", \"error\");\r\n      }\r\n    } else  {\r\n      db.users.update(user[0].userid, {\r\n        cover: cover,\r\n        img: image,\r\n        name: name,\r\n        username: username,\r\n      });\r\n      props.notify(\"Changes saved\", \"success\");\r\n    }\r\n  };\r\n\r\n  const [pModal, setpModal] = useState(false);\r\n  const PasswordModal = () => {\r\n    const [currentPassword, setCurrentPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    const signout = () => {\r\n      props.isLoggedInHandler();\r\n      props.setSessionId(\"\");\r\n      navigate(\"/\")\r\n    };\r\n\r\n    const updateNewPassword = (e) => {\r\n      e.preventDefault();\r\n      if (\r\n        currentPassword !== \"\" &&\r\n        newPassword !== \"\" &&\r\n        confirmPassword !== \"\"\r\n      ) {\r\n        console.log(\"hello\");\r\n        if (user[0].password === md5(currentPassword)) {\r\n          db.users.update(user[0].userid, { password: md5(newPassword) });\r\n          props.notify(\"Save new password\", \"success\");\r\n          signout()\r\n        } else {\r\n          props.notify(\"Incorrect current password\", \"error\");\r\n        }\r\n      } else {\r\n        props.notify(\"empty fields\", \"error\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className=\"overlay\">\r\n          <form className=\"password-container\" onSubmit={updateNewPassword}>\r\n            <h2> Change Password </h2>\r\n            <Input\r\n              type=\"password\"\r\n              label=\"Current Password\"\r\n              placeholder=\"enter current password\"\r\n              errorMessage=\"Password should be 12-20 characters and include at least 1 lowercase letter, 1 uppercase letter, 1 number and 1 special character\"\r\n              handleChange={setCurrentPassword}\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              label=\"New Password\"\r\n              placeholder=\"enter new password\"\r\n              errorMessage=\"Password should be 12-20 characters and include at least 1 lowercase letter, 1 uppercase letter, 1 number and 1 special character\"\r\n              handleChange={setNewPassword}\r\n              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{12,20}$\"\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              label=\"Confirm New Password\"\r\n              placeholder=\"confirm password\"\r\n              errorMessage=\"Password doesnt match\"\r\n              handleChange={setConfirmPassword}\r\n              pattern={newPassword}\r\n            />\r\n            <div className=\"float-r\">\r\n              <Button\r\n                type=\"button\"\r\n                label=\"cancel\"\r\n                className=\"cancel-btn\"\r\n                handleClick={() => setpModal(!pModal)}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                label=\"Save Password\"\r\n                className=\"confirm-btn\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const [modalState, setModalState] = useState(false);\r\n  const deleteAccount = (_id) => {\r\n    db.users.delete(_id);\r\n    props.isLoggedInHandler();\r\n    props.setSessionId(\"\");\r\n    props.notify(\"Account deleted\", \"success\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.isLoggedIn === false && props.sessionId === \"\") {\r\n      navigate(\"/\");\r\n      props.setLoad(false)\r\n    } else {\r\n      props.setLoad(true)\r\n    }\r\n    \r\n    if (user) {\r\n      setCover(user[0].cover);\r\n      setImage(user[0].img);\r\n      setName(user[0].name);\r\n      setUsername(user[0].username);\r\n      setCurrentUser(user[0].username);\r\n      setPassword(md5(user[0].password));\r\n    }\r\n  }, [user, navigate, props.isLoggedIn, props.sessionId]);\r\n\r\n  return props.load ? (\r\n    <>\r\n      <Navbar sessionId={props.sessionId} />\r\n      <Menu\r\n        modalHandler = {() => navigate(`/${props.sessionId}`)}\r\n        isLoggedInHandler={props.isLoggedInHandler}\r\n        setSessionId={props.setSessionId}\r\n        sessionId={props.sessionId}\r\n      />\r\n      <div className=\"home-container\">\r\n        <div className=\"profile\">\r\n          <div\r\n            className=\"cover-photo\"\r\n            style={\r\n              cover === \"none\"\r\n                ? { backgroundImage: `url(${CoverNone})` }\r\n                : { backgroundImage: \"url(\" + cover + \")\" }\r\n            }\r\n          >\r\n            <div className=\"input-container\">\r\n              <div className=\"upload-icon\">\r\n                {\" \"}\r\n                <FiEdit3 className=\"icon\" />{\" \"}\r\n              </div>\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => getFile(e.target.files, setCover)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"user-details\">\r\n            <div className=\"image-name\">\r\n              <div className=\"img-container\">\r\n                <div\r\n                  className=\"user-img\"\r\n                  style={\r\n                    image === \"none\"\r\n                      ? { backgroundImage: `url(${UserNone})` }\r\n                      : { backgroundImage: \"url(\" + image + \")\" }\r\n                  }\r\n                >\r\n                  <div className=\"input-container\">\r\n                    <div className=\"upload-icon\">\r\n                      {\" \"}\r\n                      <FiCamera className=\"icon\" />{\" \"}\r\n                    </div>\r\n                    <input\r\n                      type=\"file\"\r\n                      onChange={(e) => getFile(e.target.files, setImage)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <h1> {name} </h1>\r\n            </div>\r\n            <form onSubmit={updateProfile}>\r\n              <Input\r\n                type=\"text\"\r\n                label=\"Name\"\r\n                placeholder=\"Enter Name\"\r\n                errorMessage=\"Name should have a minimum of 5 characters\"\r\n                handleChange={setName}\r\n                value={name}\r\n                pattern=\"^[a-zA-Z\\s]{5,150}$\"\r\n              />\r\n              <Input\r\n                type=\"text\"\r\n                label=\"Username\"\r\n                placeholder=\"Enter username\"\r\n                errorMessage=\"Username should be 6-32 characters and shouldn't include any special character!\"\r\n                handleChange={setUsername}\r\n                value={username}\r\n                pattern=\"^[A-Za-z0-9]{6,32}$\"\r\n              />\r\n              <div className=\"password\">\r\n                <p> Password </p>\r\n                <Button\r\n                  type=\"button\"\r\n                  label=\"Change password\"\r\n                  className=\"button\"\r\n                  handleClick={() => setpModal(!pModal)}\r\n                />\r\n              </div>\r\n              <Button type=\"submit\" label=\"Save Changes\" className=\"button\" />\r\n              <Button\r\n                type=\"button\"\r\n                label=\"Delete Account\"\r\n                className=\"delete-btn button\"\r\n                handleClick={() => setModalState(!modalState)}\r\n              />\r\n            </form>\r\n            {pModal ? <PasswordModal /> : null}\r\n            <ConfirmationModal\r\n              header=\"Delete Account\"\r\n              body=\"Are you sure you want to delete this account?\"\r\n              onConfirm={() => deleteAccount(user[0].userid)}\r\n              onHide={() => setModalState(!modalState)}\r\n              isVisible={modalState}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  ) : null\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}