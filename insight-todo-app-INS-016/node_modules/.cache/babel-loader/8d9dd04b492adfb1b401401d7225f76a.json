{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\Insight-todo-app2\\\\insight-todo-app2\\\\insight-todo-app-ins-016\\\\src\\\\components\\\\TaskList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"./button\";\nimport \"../styles/Home.css\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskList = props => {\n  _s();\n\n  const [taskList, setTaskList] = useState(props.list);\n\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    setTaskList(reorder(taskList, result.source.index, result.destination.index));\n  };\n\n  useEffect(() => {\n    setTaskList(props.list);\n  }, [props.list]);\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.filter === \"filter\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        className: props.filterState === true ? \"tag-button tag-active\" : \"tag-button\",\n        label: \"Completed\",\n        handleClick: () => props.setFilterState(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        className: props.filterState === false ? \"tag-button tag-active\" : \"tag-button\",\n        label: \"In progress\",\n        handleClick: () => props.setFilterState(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [taskList === null || taskList === void 0 ? void 0 : taskList.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: task.taskid.toString(),\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: task.completed ? \"task-container done\" : \"task-container\",\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              style: { ...provided.draggableProps.style,\n                boxShadow: snapshot.isDragging ? \"0 0 .5rem #888\" : \"none\",\n                background: snapshot.isDragging ? \"#A6B2BD\" : \"#31313115\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-col-left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-checker\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    className: \"checker\",\n                    handleClick: () => props.updateHandler(task.taskid)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-title\",\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: task.taskname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-description\",\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: task.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-time\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Start Date: \", task.startDate]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"End Date: \", task.endDate]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-col-right\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  className: \"delete-task black-text\",\n                  label: \"Edit\",\n                  handleClick: () => props.editHandler(task.taskid)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  className: \"delete-task\",\n                  label: \"Delete\",\n                  handleClick: () => props.handleConfirmDelete(task.taskid)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)\n          }, task.taskid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TaskList, \"/9a7iJh+0kREK6O+OGtoDYs1Pag=\");\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/Insight-todo-app2/insight-todo-app2/insight-todo-app-ins-016/src/components/TaskList.js"],"names":["React","useState","useEffect","Button","DragDropContext","Droppable","Draggable","TaskList","props","taskList","setTaskList","list","onDragEnd","result","destination","reorder","source","index","startIndex","endIndex","Array","from","removed","splice","filter","filterState","setFilterState","provided","droppableProps","innerRef","map","task","taskid","toString","snapshot","completed","draggableProps","dragHandleProps","style","boxShadow","isDragging","background","updateHandler","taskname","description","startDate","endDate","editHandler","handleConfirmDelete","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from \"./button\";\r\nimport \"../styles/Home.css\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst TaskList = (props) => {\r\n  const [taskList, setTaskList] = useState(props.list);\r\n  const onDragEnd = (result) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    setTaskList(\r\n      reorder(taskList, result.source.index, result.destination.index)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTaskList(props.list);\r\n  }, [props.list]);\r\n\r\n  const reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {props.filter === \"filter\" ? (\r\n        <>\r\n          <Button\r\n            type=\"button\"\r\n            className={\r\n              props.filterState === true ? \"tag-button tag-active\" : \"tag-button\"\r\n            }\r\n            label=\"Completed\"\r\n            handleClick={() => props.setFilterState(true)}\r\n          />\r\n          <Button\r\n            type=\"button\"\r\n            className={\r\n              props.filterState === false ? \"tag-button tag-active\" : \"tag-button\"\r\n            }\r\n            label=\"In progress\"\r\n            handleClick={() => props.setFilterState(false)}\r\n          />\r\n        </>\r\n      ) : null}\r\n\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided) => (\r\n            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n              {taskList?.map((task, index) => (\r\n                <Draggable\r\n                  key={task.taskid}\r\n                  draggableId={task.taskid.toString()}\r\n                  index={index}\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      className={\r\n                        task.completed\r\n                          ? \"task-container done\"\r\n                          : \"task-container\"\r\n                      }\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={{\r\n                        ...provided.draggableProps.style,\r\n                        boxShadow: snapshot.isDragging\r\n                          ? \"0 0 .5rem #888\"\r\n                          : \"none\",\r\n                        background: snapshot.isDragging\r\n                          ? \"#A6B2BD\"\r\n                          : \"#31313115\",\r\n                      }}\r\n                    >\r\n                      <div className=\"task-col-left\">\r\n                        <div className=\"task-checker\">\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"checker\"\r\n                            handleClick={() => props.updateHandler(task.taskid)}\r\n                          />\r\n                        </div>\r\n                        <div className=\"task-details\">\r\n                          <div className=\"task-title\">\r\n                            <h1>{task.taskname}</h1>\r\n                          </div>\r\n                          <div className=\"task-description\">\r\n                            <h1>{task.description}</h1>\r\n                          </div>\r\n                          <div className=\"task-time\">\r\n                            <p>Start Date: {task.startDate}</p>\r\n                            <p>End Date: {task.endDate}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"task-col-right\">\r\n                        <Button\r\n                          type=\"button\"\r\n                          className=\"delete-task black-text\"\r\n                          label=\"Edit\"\r\n                          handleClick={() => props.editHandler(task.taskid)}\r\n                        />\r\n                        <Button\r\n                          type=\"button\"\r\n                          className=\"delete-task\"\r\n                          label=\"Delete\"\r\n                          handleClick={() =>\r\n                            props.handleConfirmDelete(task.taskid)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"]},"metadata":{},"sourceType":"module"}