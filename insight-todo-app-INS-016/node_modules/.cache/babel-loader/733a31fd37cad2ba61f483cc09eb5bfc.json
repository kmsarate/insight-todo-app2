{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\Insight-todo-app2\\\\insight-todo-app2\\\\insight-todo-app-ins-016\\\\src\\\\pages\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport { Link, useNavigate, NavLink } from \"react-router-dom\";\nimport md5 from \"md5\"; // Components\n\nimport Input from \"../components/input\";\nimport Button from \"../components/button\";\nimport ForgotPassword from \"../components/ForgotPassword\"; // db\n\nimport db from \"../utils/db\"; // Style\n\nimport \"../styles/login.css\";\nimport \"../styles/popup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    // checked if isLoggedIn is false then redirect to / page\n    if (props.isLoggedIn === true && props.sessionId !== \"\") {\n      navigate(`/${props.sessionId}`);\n    }\n  }, [navigate, props.isLoggedIn, props.sessionId]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const usersList = useLiveQuery(() => db.users.toArray());\n  const user = db.users.where(\"username\").equalsIgnoreCase(username).toArray();\n  const [forgotPopup, setForgotPopup] = useState(false);\n\n  const popupHandler = () => {\n    setForgotPopup(!forgotPopup);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const _val = [];\n    usersList.map(item => {\n      _val.push(item.username.toLowerCase());\n    });\n\n    if (_val.includes(username.toLowerCase())) {\n      if (user._value[0].password === md5(password)) {\n        navigate(`/${user._value[0].userid}`);\n        props.isLoggedInHandler();\n        props.setSessionId(user._value[0].userid);\n      } else {\n        props.notify(\"Incorrect password\", \"error\");\n      }\n    } else {\n      props.notify(\"username doesnt exists\", \"error\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"Navbar-Items\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"navbar-logo-login\",\n        children: \"To.Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ForgotPassword, {\n      popupHandler: popupHandler,\n      forgotPopup: forgotPopup,\n      notify: props.notify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Organize your Tasks\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 32\n          }, this), \"with To.Do\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"illustration\",\n          src: \"assets/images/illustration.png\",\n          alt: \"Illustration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"line\",\n        src: \"assets/images/Line.png\",\n        alt: \"Illustration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          label: \"Username\",\n          placeholder: \"Enter Username\",\n          handleChange: setUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          label: \"Password\",\n          placeholder: \"Enter Password\",\n          handleChange: setPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          label: \"Login\",\n          className: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login-small-text\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            label: \"Forgot Password\",\n            type: \"button\",\n            className: \"flat-link\",\n            handleClick: popupHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/signup\",\n              className: \"flat-link\",\n              children: \" Signup \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"lOdmLTv1GXDQKurxqvoxF2e+UGA=\", false, function () {\n  return [useNavigate, useLiveQuery];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/Insight-todo-app2/insight-todo-app2/insight-todo-app-ins-016/src/pages/login.js"],"names":["React","useState","useEffect","useLiveQuery","Link","useNavigate","NavLink","md5","Input","Button","ForgotPassword","db","Login","props","navigate","isLoggedIn","sessionId","username","setUsername","password","setPassword","usersList","users","toArray","user","where","equalsIgnoreCase","forgotPopup","setForgotPopup","popupHandler","handleSubmit","e","preventDefault","_val","map","item","push","toLowerCase","includes","_value","userid","isLoggedInHandler","setSessionId","notify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLiveQuery } from \"dexie-react-hooks\";\r\nimport { Link, useNavigate, NavLink } from \"react-router-dom\";\r\nimport md5 from \"md5\";\r\n\r\n// Components\r\nimport Input from \"../components/input\";\r\nimport Button from \"../components/button\";\r\nimport ForgotPassword from \"../components/ForgotPassword\";\r\n\r\n// db\r\nimport db from \"../utils/db\";\r\n\r\n// Style\r\nimport \"../styles/login.css\";\r\nimport \"../styles/popup.css\";\r\n\r\nconst Login = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // checked if isLoggedIn is false then redirect to / page\r\n    if (props.isLoggedIn === true && props.sessionId !== \"\") {\r\n      navigate(`/${props.sessionId}`);\r\n    }\r\n  }, [navigate, props.isLoggedIn, props.sessionId]);\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const usersList = useLiveQuery(() => db.users.toArray());\r\n  const user = db.users.where(\"username\").equalsIgnoreCase(username).toArray();\r\n\r\n  const [forgotPopup, setForgotPopup] = useState(false);\r\n  const popupHandler = () => {\r\n    setForgotPopup(!forgotPopup);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const _val = [];\r\n    usersList.map((item) => {\r\n      _val.push(item.username.toLowerCase());\r\n    });\r\n\r\n    if (_val.includes(username.toLowerCase())) {\r\n      if (user._value[0].password === md5(password)) {\r\n        navigate(`/${user._value[0].userid}`);\r\n        props.isLoggedInHandler();\r\n        props.setSessionId(user._value[0].userid);\r\n      } else {\r\n        props.notify(\"Incorrect password\", \"error\");\r\n      }\r\n    } else {\r\n      props.notify(\"username doesnt exists\", \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <nav className=\"Navbar-Items\">\r\n      <h1 className=\"navbar-logo-login\">To.Do</h1>\r\n    </nav>  \r\n      <ForgotPassword\r\n        popupHandler={popupHandler}\r\n        forgotPopup={forgotPopup}\r\n        notify={props.notify}\r\n      />\r\n      <div className=\"login-wrapper\">\r\n        <div className=\"left-col\">\r\n          <h1>\r\n            Organize your Tasks<br></br>with To.Do\r\n          </h1>\r\n          <img\r\n            className=\"illustration\"\r\n            src=\"assets/images/illustration.png\"\r\n            alt=\"Illustration\"\r\n          />\r\n        </div>\r\n        <img className=\"line\" src=\"assets/images/Line.png\" alt=\"Illustration\" />\r\n        <form className=\"login-form\" onSubmit={handleSubmit}>\r\n          <h2>Login</h2>\r\n          <Input\r\n            type=\"text\"\r\n            label=\"Username\"\r\n            placeholder=\"Enter Username\"\r\n            handleChange={setUsername}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            placeholder=\"Enter Password\"\r\n            handleChange={setPassword}\r\n          />\r\n          <Button type=\"submit\" label=\"Login\" className=\"button\" />\r\n\r\n          <span className=\"login-small-text\">\r\n            <Button\r\n              label=\"Forgot Password\"\r\n              type=\"button\"\r\n              className=\"flat-link\"\r\n              handleClick={popupHandler}\r\n            />\r\n            <p>\r\n              Don't have an account?\r\n              <NavLink to=\"/signup\" className=\"flat-link\"> Signup </NavLink>\r\n            </p>\r\n          </span>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}