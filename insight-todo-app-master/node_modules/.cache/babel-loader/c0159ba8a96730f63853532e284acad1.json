{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\Insight-todo-app2\\\\insight-todo-app2\\\\insight-todo-app-master\\\\src\\\\Components\\\\Pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Home.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const current = new Date();\n  const dateNow = `${current.getDate()}, ${current.getFullYear()}`;\n  const [month, setMonth] = useState(current.getMonth());\n\n  const convertMonth = month => {\n    if (month === 0) setMonth(\"January\");else if (month === 1) setMonth(\"February\");else if (month === 2) setMonth(\"March\");else if (month === 3) setMonth(\"April\");else if (month === 4) setMonth(\"May\");else if (month === 5) setMonth(\"June\");else if (month === 6) setMonth(\"July\");else if (month === 7) setMonth(\"August\");else if (month === 8) setMonth(\"September\");else if (month === 9) setMonth(\"October\");else if (month === 10) setMonth(\"November\");else if (month === 11) setMonth(\"December\");\n    return /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [day, \",  \", month, \"  \", dateNow, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  };\n\n  const [day, setDay] = useState(current.getDay());\n\n  const convertDay = day => {\n    if (day === 1) setDay(\"Monday\");else if (day === 2) setDay(\"Tuesday\");else if (day === 3) setDay(\"Wednesday\");else if (day === 4) setDay(\"Thursday\");else if (day === 5) setDay(\"Friday\");else if (day === 6) setDay(\"Saturday\");else if (day === 7) setDay(\"Sunday\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-bar-header\",\n      children: [\"All tasks\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"today-taskbar\",\n        children: [\"Today\", /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [convertDay(day), \" \", convertMonth(month)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upcoming-taskbar\",\n        children: [\"Upcoming\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upcoming-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"12 Mar - Saturday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Upcoming Task 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"14 Mar - Saturday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Upcoming Task 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"2bwBrrMoZoqesHedV51TyPpVzBQ=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/Insight-todo-app2/insight-todo-app2/insight-todo-app-master/src/Components/Pages/Home.js"],"names":["React","useState","Home","current","Date","dateNow","getDate","getFullYear","month","setMonth","getMonth","convertMonth","day","setDay","getDay","convertDay"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './Home.css'\r\nimport { useState } from 'react'\r\n\r\nconst Home = () => {\r\n  const current = new Date();\r\n  const dateNow = `${current.getDate()}, ${current.getFullYear()}`;\r\n  \r\n\r\n  const [month, setMonth] = useState(current.getMonth());\r\n\r\n  const convertMonth = (month) => {\r\n    if (month === 0) setMonth(\"January\");\r\n        else if (month === 1) setMonth(\"February\");\r\n        else if (month === 2) setMonth(\"March\");\r\n        else if (month === 3) setMonth(\"April\");\r\n        else if (month === 4) setMonth(\"May\");\r\n        else if (month === 5) setMonth(\"June\");\r\n        else if (month === 6) setMonth(\"July\");\r\n        else if (month === 7) setMonth(\"August\");\r\n        else if (month === 8) setMonth(\"September\");\r\n        else if (month === 9) setMonth(\"October\");\r\n        else if (month === 10) setMonth(\"November\");\r\n        else if (month === 11) setMonth(\"December\");\r\n\r\n     \r\n    return <h5>{day},  {month}  {dateNow} </h5> ;\r\n  };\r\n\r\n  const [day, setDay] = useState(current.getDay());\r\n\r\nconst convertDay = (day) => {\r\n    if (day === 1) setDay(\"Monday\");\r\n        else if (day === 2) setDay(\"Tuesday\");\r\n        else if (day === 3) setDay(\"Wednesday\");\r\n        else if (day === 4) setDay(\"Thursday\");\r\n        else if (day === 5) setDay(\"Friday\");\r\n        else if (day === 6) setDay(\"Saturday\");\r\n        else if (day === 7) setDay(\"Sunday\");\r\n};\r\n\r\n  \r\n  return (\r\n    <div className='home-container'>\r\n    <div className='task-bar-header'>All tasks\r\n    <div className='today-taskbar'>Today\r\n    <h5>{convertDay(day) } {convertMonth(month)}</h5>\r\n    </div>\r\n    <div className='upcoming-taskbar'>Upcoming\r\n    <div className='upcoming-details'>\r\n          <h3>12 Mar - Saturday</h3>\r\n          <h4>Upcoming Task 1</h4>\r\n          <h3>14 Mar - Saturday</h3>\r\n          <h4>Upcoming Task 1</h4>\r\n    </div>\r\n    </div>\r\n    </div>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}