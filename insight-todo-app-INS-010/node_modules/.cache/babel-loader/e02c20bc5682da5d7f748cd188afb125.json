{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\Insight-todo-app2\\\\insight-todo-app2\\\\insight-todo-app-ins-010\\\\src\\\\components\\\\ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Input from \"./input\";\nimport Button from \"./button\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport * as md5 from \"md5\";\nimport db from \"../utils/db\";\nimport \"../styles/popup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ForgotPassword = props => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [securityQuestion, setSecurityQuestion] = useState(\"In what city were you born?\");\n  const [securityAnswer, setSecurityAnswer] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const usersList = useLiveQuery(() => db.users.toArray());\n  const user = db.users.where(\"username\").equalsIgnoreCase(username).toArray();\n\n  const submitForgotPassword = e => {\n    e.preventDefault(); // list of usernames\n\n    const _val = [];\n    usersList.map(item => {\n      _val.push(item.username.toLowerCase());\n    });\n    console.log(user); // validate if all fields are empty\n\n    if (username !== \"\" && securityAnswer !== \"\" && password !== \"\" && confirmPassword !== \"\") {\n      // verify if username exists\n      if (_val.includes(username.toLowerCase())) {\n        // validate if security question and answer is correct\n        if (securityQuestion === user._value[0].securityQuestion && securityAnswer === user._value[0].securityAnswer) {\n          db.users.update(parseInt(user._value[0].userid), {\n            password: md5(password)\n          });\n          props.notify(\"New password saved\", \"success\");\n          props.popupHandler();\n        } else {\n          props.notify(\"Incorrect Security question and answer. who r u?!\", \"error\");\n        }\n      } else {\n        props.notify(\"Username doesnt exists\", \"error\");\n      }\n    } else {\n      props.notify(\"Fields are empty\", \"error\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: props.forgotPopup ? \"overlay\" : \"overlay d-none\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgot-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Forgot Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitForgotPassword,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            label: \"Username\",\n            placeholder: \"enter username\",\n            handleChange: setUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Security Question \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => {\n                const selectedQuestion = e.target.value;\n                setSecurityQuestion(selectedQuestion);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"In what city were you born?\",\n                children: \"In what city were you born?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"What is the name of your favorite pet?\",\n                children: \"What is the name of your favorite pet?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"What is your mother's maiden name?\",\n                children: \"What is your mother's maiden name?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"What was your favorite food as a child?\",\n                children: \"What was your favorite food as a child?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"IWhat is the name of your first school?\",\n                children: \"What is the name of your first school?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            label: \"Answer\",\n            placeholder: \"enter answer\",\n            handleChange: setSecurityAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            label: \"New Password\",\n            placeholder: \"enter password\",\n            errorMessage: \"Password should be 12-20 characters and include at least 1 lowercase letter, 1 uppercase letter, 1 number and 1 special character\",\n            handleChange: setPassword,\n            pattern: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{12,20}$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            label: \"Confirm New Password\",\n            placeholder: \"enter password\",\n            errorMessage: \"Password doesnt match\",\n            handleChange: setConfirmPassword,\n            pattern: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            label: \"Reset password\",\n            className: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            label: \"cancel\",\n            className: \"cancel-btn\",\n            handleClick: props.popupHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ForgotPassword, \"UXOTe+VL2+KUvrdrBRLPly7fPQs=\", false, function () {\n  return [useLiveQuery];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/Insight-todo-app2/insight-todo-app2/insight-todo-app-ins-010/src/components/ForgotPassword.js"],"names":["React","useState","Input","Button","useLiveQuery","md5","db","ForgotPassword","props","username","setUsername","securityQuestion","setSecurityQuestion","securityAnswer","setSecurityAnswer","password","setPassword","confirmPassword","setConfirmPassword","usersList","users","toArray","user","where","equalsIgnoreCase","submitForgotPassword","e","preventDefault","_val","map","item","push","toLowerCase","console","log","includes","_value","update","parseInt","userid","notify","popupHandler","forgotPopup","selectedQuestion","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Input from \"./input\";\r\nimport Button from \"./button\";\r\nimport { useLiveQuery } from \"dexie-react-hooks\";\r\nimport * as md5 from \"md5\";\r\nimport db from \"../utils/db\";\r\nimport \"../styles/popup.css\";\r\n\r\nconst ForgotPassword = (props) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [securityQuestion, setSecurityQuestion] = useState(\r\n    \"In what city were you born?\"\r\n  );\r\n  const [securityAnswer, setSecurityAnswer] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n\r\n  const usersList = useLiveQuery(() => db.users.toArray());\r\n  const user = db.users.where(\"username\").equalsIgnoreCase(username).toArray();\r\n\r\n  const submitForgotPassword = (e) => {\r\n    e.preventDefault();\r\n    // list of usernames\r\n    const _val = [];\r\n    usersList.map((item) => {\r\n      _val.push(item.username.toLowerCase());\r\n    });\r\n    console.log(user)\r\n\r\n    // validate if all fields are empty\r\n    if (\r\n      username !== \"\" &&\r\n      securityAnswer !== \"\" &&\r\n      password !== \"\" &&\r\n      confirmPassword !== \"\"\r\n    ) {\r\n      // verify if username exists\r\n      if (_val.includes(username.toLowerCase())) {\r\n        // validate if security question and answer is correct\r\n        if (\r\n          securityQuestion === user._value[0].securityQuestion &&\r\n          securityAnswer === user._value[0].securityAnswer\r\n        ) {\r\n          db.users.update(parseInt(user._value[0].userid), { password: md5(password) });\r\n          props.notify(\"New password saved\", \"success\");\r\n          props.popupHandler()\r\n        } else {\r\n          props.notify(\"Incorrect Security question and answer. who r u?!\", \"error\");\r\n        }\r\n      } else {\r\n        props.notify(\"Username doesnt exists\", \"error\");\r\n      }\r\n    } else {\r\n      props.notify(\"Fields are empty\", \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={props.forgotPopup ? \"overlay\" : \"overlay d-none\" }>\r\n        <div className=\"forgot-container\">\r\n          <h2> Forgot Password </h2>\r\n          <form onSubmit={submitForgotPassword}>\r\n            <Input\r\n              type=\"text\"\r\n              label=\"Username\"\r\n              placeholder=\"enter username\"\r\n              handleChange={setUsername}\r\n            />\r\n            <div className=\"input-container\">\r\n              <label> Security Question </label>\r\n              <select\r\n                onChange={(e) => {\r\n                  const selectedQuestion = e.target.value;\r\n                  setSecurityQuestion(selectedQuestion);\r\n                }}\r\n              >\r\n                <option value=\"In what city were you born?\">\r\n                  In what city were you born?\r\n                </option>\r\n                <option value=\"What is the name of your favorite pet?\">\r\n                  What is the name of your favorite pet?\r\n                </option>\r\n                <option value=\"What is your mother's maiden name?\">\r\n                  What is your mother's maiden name?\r\n                </option>\r\n                <option value=\"What was your favorite food as a child?\">\r\n                  What was your favorite food as a child?\r\n                </option>\r\n                <option value=\"IWhat is the name of your first school?\">\r\n                  What is the name of your first school?\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <Input\r\n              type=\"text\"\r\n              label=\"Answer\"\r\n              placeholder=\"enter answer\"\r\n              handleChange={setSecurityAnswer}\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              label=\"New Password\"\r\n              placeholder=\"enter password\"\r\n              errorMessage=\"Password should be 12-20 characters and include at least 1 lowercase letter, 1 uppercase letter, 1 number and 1 special character\"\r\n              handleChange={setPassword}\r\n              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{12,20}$\"\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              label=\"Confirm New Password\"\r\n              placeholder=\"enter password\"\r\n              errorMessage=\"Password doesnt match\"\r\n              handleChange={setConfirmPassword}\r\n              pattern={password}\r\n            />\r\n            <Button type=\"submit\" label=\"Reset password\" className=\"button\" />\r\n            <Button type=\"button\" label=\"cancel\" className=\"cancel-btn\" handleClick={props.popupHandler} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"]},"metadata":{},"sourceType":"module"}