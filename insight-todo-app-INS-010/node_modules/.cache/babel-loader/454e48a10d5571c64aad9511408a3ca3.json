{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\Insight-todo-app2\\\\insight-todo-app2\\\\insight-todo-app-INS-010\\\\src\\\\components\\\\TaskList.js\";\nimport React from \"react\";\nimport Button from \"./button\";\nimport \"../styles/Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskList = props => {\n  var _props$list;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (_props$list = props.list) === null || _props$list === void 0 ? void 0 : _props$list.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: task.completed ? \"task-container done\" : \"task-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-col-left\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: \"checker\",\n            handleClick: () => props.updateHandler(task.taskid)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: task.taskname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-description\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-time\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [task.startDate, \" - \", task.endDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-col-right\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: \"delete-task black-text\",\n            label: \"Edit\",\n            handleClick: () => props.editHandler(task.taskid)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: \"delete-task\",\n            label: \"Delete\",\n            handleClick: () => props.handleConfirmDelete(task.taskid)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, task.taskid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/Insight-todo-app2/insight-todo-app2/insight-todo-app-INS-010/src/components/TaskList.js"],"names":["React","Button","TaskList","props","list","map","task","completed","updateHandler","taskid","taskname","description","startDate","endDate","editHandler","handleConfirmDelete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,oBAAP;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,sBACE;AAAA,6BACGA,KAAK,CAACC,IADT,gDACG,YAAYC,GAAZ,CAAiBC,IAAD,iBACf;AAAA,6BACA;AACE,QAAA,SAAS,EACPA,IAAI,CAACC,SAAL,GAAiB,qBAAjB,GAAyC,gBAF7C;AAAA,gCAKE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,SAFZ;AAGE,YAAA,WAAW,EAAE,MAAMJ,KAAK,CAACK,aAAN,CAAoBF,IAAI,CAACG,MAAzB;AAHrB;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACE;AAAA,0BAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,qCACE;AAAA,0BAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACE;AAAA,2BACGL,IAAI,CAACM,SADR,SACsBN,IAAI,CAACO,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAyBE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,wBAFZ;AAGE,YAAA,KAAK,EAAC,MAHR;AAIE,YAAA,WAAW,EAAE,MAAMV,KAAK,CAACW,WAAN,CAAkBR,IAAI,CAACG,MAAvB;AAJrB;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,aAFZ;AAGE,YAAA,KAAK,EAAC,QAHR;AAIE,YAAA,WAAW,EAAE,MAAMN,KAAK,CAACY,mBAAN,CAA0BT,IAAI,CAACG,MAA/B;AAJrB;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,OAAUH,IAAI,CAACG,MAAf;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAgDD,CAjDD;;KAAMP,Q;AAmDN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport Button from \"./button\";\r\nimport \"../styles/Home.css\";\r\n\r\nconst TaskList = (props) => {\r\n  return (\r\n    <>\r\n      {props.list?.map((task) => \r\n        <div key={task.taskid}>\r\n        <div\r\n          className={\r\n            task.completed ? \"task-container done\" : \"task-container\"\r\n          }\r\n        >\r\n          <div className=\"task-col-left\">\r\n            <Button\r\n              type=\"button\"\r\n              className=\"checker\"\r\n              handleClick={() => props.updateHandler(task.taskid)}\r\n            />\r\n            <div>\r\n              <div className=\"task-title\">\r\n                <h1>{task.taskname}</h1>\r\n              </div>\r\n              <div className=\"task-description\">\r\n                <h1>{task.description}</h1>\r\n              </div>\r\n              <div className=\"task-time\">\r\n                <p>\r\n                  {task.startDate} - {task.endDate}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"task-col-right\">\r\n            <Button\r\n              type=\"button\"\r\n              className=\"delete-task black-text\"\r\n              label=\"Edit\"\r\n              handleClick={() => props.editHandler(task.taskid)}\r\n            />\r\n            <Button\r\n              type=\"button\"\r\n              className=\"delete-task\"\r\n              label=\"Delete\"\r\n              handleClick={() => props.handleConfirmDelete(task.taskid)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"]},"metadata":{},"sourceType":"module"}